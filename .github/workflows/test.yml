name: run tests

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14.16.1']
    container: blowltd/docker-ci:node-${{ matrix.node }}
    env:
      CI: true
      TOKEN_GITHUB_CI: ${{ secrets.TOKEN_GITHUB_CI }}
    steps:
    - uses: actions/checkout@v1
    - name: cache node_modules
      id: cache-nodemodules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
    - name: npm ci
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        echo "//npm.pkg.github.com/:_authToken=${TOKEN_GITHUB_CI}" >> .npmrc
        echo "@blowltd:registry=https://npm.pkg.github.com" >> .npmrc
        echo "always-auth=true" >> .npmrc
        npm ci

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14.16.1']
    container: blowltd/docker-ci:node-${{ matrix.node }}
    needs: dependencies
    env:
      TOKEN_GITHUB_CI: ${{ secrets.TOKEN_GITHUB_CI }}

    steps:
    - uses: actions/checkout@v1
    - name: cache node_modules
      id: cache-nodemodules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
    - name: npm ci
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        echo "//npm.pkg.github.com/:_authToken=${TOKEN_GITHUB_CI}" > .npmrc
        echo "@blowltd:registry=https://npm.pkg.github.com" >> .npmrc
        echo "always-auth=true" >> .npmrc
        npm ci
    - name: lint
      run: npm run eslint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14.16.1']
    container: blowltd/docker-ci:node-${{ matrix.node }}
    needs: dependencies
    env:
      TOKEN_GITHUB_CI: ${{ secrets.TOKEN_GITHUB_CI }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}

    steps:
    - uses: actions/checkout@v1
    - name: cache node_modules
      id: cache-nodemodules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
    - name: npm ci
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        echo "//npm.pkg.github.com/:_authToken=${TOKEN_GITHUB_CI}" > .npmrc
        echo "@blowltd:registry=https://npm.pkg.github.com" >> .npmrc
        echo "always-auth=true" >> .npmrc
        npm ci
    - name: build
      run: npm run build
    - name: test
      run: npm test
      env:
        CI: true
        LAMBDA_TESTER_NODE_VERSION_CHECK: false
